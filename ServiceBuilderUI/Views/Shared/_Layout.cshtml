<!DOCTYPE html>
<html lang="en">
<head>

    @inject Business.Service.Infrastructure.ILexiconService lexiconHelper;
    @inject Business.Service.Infrastructure.ISecurityService securtyService;
    @inject Business.Service.Infrastructure.INotificationService notifyService;


    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
    <title>@ViewBag.Title ServiceHere</title>
    <meta name="description" content="@ViewBag.MetaDescription">

    <link rel="shortcut icon" href="~/img/favicon.png">
    <link async defer href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,500;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link async defer href="~/css/bootstrap.css" rel="stylesheet" />
    <link async defer href="~/lib/fontawesome/css/fontawesome.min.css" rel="stylesheet" />
    <link async defer href="~/lib/fontawesome/css/all.min.css" rel="stylesheet" />
    <link async defer href="~/lib/owlcarousel/owl.carousel.min.css" rel="stylesheet" />
    <link async defer href="~/lib/owlcarousel/owl.theme.default.min.css" rel="stylesheet" />
    <link async defer href="~/css/style.css" rel="stylesheet" />
    <link async defer href="~/lib/toastr/toastr.min.css" rel="stylesheet" />

    @*<script src="https://apis.google.com/js/platform.js?onload=renderButton"></script>*@
    <meta name="google-signin-client_id" content="1017385304568-gachbjpcdhs8nu2i6q0uhicu94reca3s.apps.googleusercontent.com">
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/tr_TR/sdk.js#xfbml=1&version=v9.0&appId=318019909328460&autoLogAppEvents=1" nonce="ng4rxM1B"></script>
    @RenderSection("Styles", required: false)

</head>

<body>
    <div class="page-loading">
        <div class="preloader-inner">
            <div class="preloader-square-swapping">
                <div class="cssload-square-part cssload-square-green"></div>
                <div class="cssload-square-part cssload-square-pink"></div>
                <div class="cssload-square-blend"></div>
            </div>
        </div>
    </div>

    <div class="main-wrapper">
        <header class="header">
            <nav class="navbar navbar-expand-lg header-nav">
                <div class="navbar-header">
                    <a id="mobile_btn" href="javascript:void(0);">
                        <span class="bar-icon">
                            <span></span>
                            <span></span>
                            <span></span>
                        </span>
                    </a>
                    <a href="/" class="navbar-brand logo">
                        <img src="~/img/logo.png" class="img-fluid" alt="Logo">
                    </a>
                    <a href="index.html" class="navbar-brand logo-small">
                        <img src="~/img/logo-icon.png" class="img-fluid" alt="Logo">
                    </a>
                </div>
                <div class="main-menu-wrapper">
                    <div class="menu-header">
                        <a href="index.html" class="menu-logo">
                            <img src="~/img/logo.png" class="img-fluid" alt="Logo">
                        </a>
                        <a id="menu_close" class="menu-close" href="javascript:void(0);"> <i class="fas fa-times"></i></a>
                    </div>
                    <ul class="main-nav">
                        <li class="@ViewBag.HomeSelect">
                            <a href="/main-page">@lexiconHelper.GetTextValue("_main_page", 1)</a>
                        </li>
                        @*<li class="@ViewBag.CategoriesSelect">
                                <a href="/categories">@lexiconHelper.GetTextValue("_categories", 1)</a>
                            </li>*@
                        <li class="@ViewBag.AboutUsSelect">
                            <a href="/about-us">@lexiconHelper.GetTextValue("_about_us", 1)</a>
                        </li>
                        <li class="@ViewBag.ContactSelect">
                            <a href="/contact-us">@lexiconHelper.GetTextValue("_contact", 1)</a>
                        </li>

                        @if (securtyService.GetCurrentUser() == null)
                        {
                            <li class="nav-item">
                                <a href="javascript:void(0);" onclick="openLoginModal('provider')">@lexiconHelper.GetTextValue("_become_a_professional", 1)</a>
                            </li>
                            <li class="nav-item">
                                <a href="javascript:void(0);" onclick="openLoginModal('user')">@lexiconHelper.GetTextValue("_become_a_user", 1)</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link header-login" href="javascript:void(0);" onclick="openLoginModal('login')">@lexiconHelper.GetTextValue("_login", 1)</a>
                            </li>
                        }

                    </ul>
                </div>


                @{var currentUser = securtyService.GetCurrentUser();


                    if (currentUser != null)
                    {
                        var notifyResult = notifyService.GetUnReadNotifications(currentUser.ID);
                        var notifyList = notifyResult.Data as List<ViewModel.Views.Notification.NotificationListModel>;

                        <ul class="nav header-navbar-rht">
                            <li class="nav-item dropdown logged-item">

                                <a href="#" class="dropdown-toggle nav-link" data-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-bell"></i>
                                    @if (notifyResult.DataCount > 0)
                                    {
                                        <span class="badge badge-pill bg-yellow" id="notifyCount">@notifyResult.DataCount</span>
                                    }
                                </a>
                                <div class="dropdown-menu dropdown-menu-right notifications">
                                    <div class="topnav-dropdown-header">
                                        <span class="notification-title">@lexiconHelper.GetTextValue("_notifications", 1)</span>
                                        <a href="javascript:void(0)" class="clear-noti" onclick="clearNotifications()">@lexiconHelper.GetTextValue("_clear_all", 1)</a>
                                    </div>
                                    <div class="noti-content">
                                        <ul class="notification-list">
                                            @foreach (var item in notifyList)
                                            {
                                                <li class="notification-message">

                                                    @if (!string.IsNullOrWhiteSpace(item.Url))
                                                    {
                                                        <a href="@item.Url">
                                                            <input type="hidden" id="notifyListId[]" name="notifyListId[]" value="@item.ID" />
                                                            <div class="media">
                                                                <div class="media-body">
                                                                    <p class="noti-details"> <span class="noti-title">@item.Description</span></p>
                                                                    <p class="noti-time"><span class="notification-time">@item.CreateDate</span></p>
                                                                </div>
                                                            </div>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <a href="/my-notifications/0">
                                                            <input type="hidden" id="notifyListId[]" name="notifyListId[]" value="@item.ID" />
                                                            <div class="media">
                                                                <div class="media-body">
                                                                    <p class="noti-details"> <span class="noti-title">@item.Description</span></p>
                                                                    <p class="noti-time"><span class="notification-time">@item.CreateDate</span></p>
                                                                </div>
                                                            </div>
                                                        </a>
                                                    }

                                                </li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="topnav-dropdown-footer">
                                        <a href="/my-notifications/0">@lexiconHelper.GetTextValue("_view_all_notifications", 1)</a>
                                    </div>
                                </div>
                            </li>

                            <li class="nav-item logged-item">
                                <a href="chat.html" class="nav-link">
                                    <i class="fa fa-comments" aria-hidden="true"></i>
                                </a>
                            </li>

                            <li class="nav-item dropdown has-arrow logged-item">
                                <a href="#" class="dropdown-toggle nav-link" data-toggle="dropdown" aria-expanded="false">
                                    <span class="user-img">
                                        @if (string.IsNullOrWhiteSpace(currentUser.ProfilePhoto))
                                        {
                                            <img class="rounded-circle" src=" https://res.cloudinary.com/servicebuilder/image/upload/v1607867463/static/nonimg_aoxjc3.png" alt="" width="31">
                                        }
                                        else
                                        {
                                            <img class="rounded-circle" referrerpolicy="no-referrer" src="@currentUser.ProfilePhoto" alt="" width="31">
                                        }


                                    </span>
                                </a>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <div class="user-header">
                                        <div class="avatar avatar-sm">
                                            @if (string.IsNullOrWhiteSpace(currentUser.ProfilePhoto))
                                            {
                                                <img class="rounded-circle" src=" https://res.cloudinary.com/servicebuilder/image/upload/v1607867463/static/nonimg_aoxjc3.png" alt="" width="31">
                                            }
                                            else
                                            {
                                                <img class="avatar-img rounded-circle" referrerpolicy="no-referrer" src="@currentUser.ProfilePhoto" alt="">
                                            }

                                        </div>
                                        <div class="user-text">
                                            <h6 class="text-truncate">@(currentUser.FirstName + " " + currentUser.LastName)</h6>
                                        </div>
                                    </div>
                                    <a class="dropdown-item" href="/dashboard">@lexiconHelper.GetTextValue("_dashboard", 1)</a>
                                    <a class="dropdown-item" href="/my-services">@lexiconHelper.GetTextValue("_services", 1)</a>
                                    <a class="dropdown-item" href="/my-bookings">@lexiconHelper.GetTextValue("_bookings", 1)</a>


                                    @if (currentUser.UserType == (int)Common.Helpers.Enum.UserTypes.ServicerEndEmployer || currentUser.UserType == (int)Common.Helpers.Enum.UserTypes.Servicer)
                                    {
                                        <a class="dropdown-item" href="/avaible-bookings/0">@lexiconHelper.GetTextValue("_avaible_bookings", 1)</a>
                                        <a class="dropdown-item" href="/my-bids">@lexiconHelper.GetTextValue("_my_bids", 1)</a>
                                        <a class="dropdown-item" href="/payment">@lexiconHelper.GetTextValue("_my_payments", 1)</a>
                                    }

                                    <a class="dropdown-item" href="/chat">@lexiconHelper.GetTextValue("_chat", 1)</a>

                                    <a class="dropdown-item" href="/my-profile">@lexiconHelper.GetTextValue("_profile_settings_page", 1)</a>
                                    <a class="dropdown-item" href="/change-password">@lexiconHelper.GetTextValue("_change_password", 1)</a>
                                    <a class="dropdown-item" onclick="signOut()">@lexiconHelper.GetTextValue("_logout", 1)</a>

                                </div>
                            </li>
                        </ul>
                    }
                }

            </nav>
        </header>


        @if (ViewBag.HideBreadCrumb != true)
        {
            <div class="breadcrumb-bar">
                <div class="container">
                    <div class="row">
                        <div class="col">
                            <div class="breadcrumb-title">
                                <h2>@ViewBag.Title</h2>
                            </div>
                        </div>
                        <div class="col-auto float-right ml-auto breadcrumb-menu">
                            <nav aria-label="breadcrumb" class="page-breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a href="/">@lexiconHelper.GetTextValue("_main_page", 1)</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        }


        @RenderBody()

        <footer class="footer">
            <div class="footer-top">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-3 col-md-6">
                            <div class="footer-widget footer-menu">
                                <h2 class="footer-title">@lexiconHelper.GetTextValue("_quick_links", 2)</h2>
                                <ul>
                                    <li>
                                        <a href="/about-us">@lexiconHelper.GetTextValue("_about_us", 2)</a>
                                    </li>
                                    <li>
                                        <a href="/contact-us">@lexiconHelper.GetTextValue("_contact_us", 2)</a>
                                    </li>
                                    <li>
                                        <a href="/faq">@lexiconHelper.GetTextValue("_faq", 2)</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <div class="footer-widget footer-menu">
                                <h2 class="footer-title">@lexiconHelper.GetTextValue("_categories", 2)</h2>
                                <ul>
                                    <li>
                                        <a href="search.html">Computer</a>
                                    </li>
                                    <li>
                                        <a href="search.html">Interior</a>
                                    </li>
                                    <li>
                                        <a href="search.html">Car Wash</a>
                                    </li>
                                    <li>
                                        <a href="search.html">Cleaning</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <div class="footer-widget footer-contact">
                                <h2 class="footer-title">@lexiconHelper.GetTextValue("_contact_us_footer", 2)</h2>
                                <div class="footer-contact-info">
                                    <div class="footer-address">
                                        <span><i class="far fa-building"></i></span>
                                        <p>@lexiconHelper.GetTextValue("_address_line", 2)</p>
                                    </div>
                                    <p><i class="fas fa-headphones"></i> @lexiconHelper.GetTextValue("_phone", 2)</p>
                                    <p class="mb-0"><i class="fas fa-envelope"></i> @lexiconHelper.GetTextValue("_email", 2)</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6">
                            <div class="footer-widget">
                                <h2 class="footer-title">@lexiconHelper.GetTextValue("_follow_us", 2)</h2>
                                <div class="social-icon">
                                    <ul>

                                        @if (!string.IsNullOrWhiteSpace(lexiconHelper.GetTextValue("_facebook_link", 2)))
                                        {
                                            <li>
                                                <a href="@lexiconHelper.GetTextValue("_facebook_link", 2)" target="_blank"><i class="fab fa-facebook-f"></i> </a>
                                            </li>
                                        }

                                        @if (!string.IsNullOrWhiteSpace(lexiconHelper.GetTextValue("_twitter_link", 2)))
                                        {
                                            <li>
                                                <a href="@lexiconHelper.GetTextValue("_twitter_link", 2)" target="_blank"><i class="fab fa-twitter"></i> </a>
                                            </li>
                                        }

                                        @if (!string.IsNullOrWhiteSpace(lexiconHelper.GetTextValue("_youtube_link", 2)))
                                        {
                                            <li>
                                                <a href="@lexiconHelper.GetTextValue("_youtube_link", 2)" target="_blank"><i class="fab fa-youtube"></i></a>
                                            </li>
                                        }
                                        @if (!string.IsNullOrWhiteSpace(lexiconHelper.GetTextValue("_google_link", 2)))
                                        {
                                            <li>
                                                <a href="@lexiconHelper.GetTextValue("_google_link", 2)" target="_blank"><i class="fab fa-google"></i></a>
                                            </li>
                                        }

                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="footer-bottom">
                <div class="container">
                    <div class="copyright">
                        <div class="row">
                            <div class="col-md-6 col-lg-6">
                                <div class="copyright-text">
                                    <p class="mb-0">&copy; @DateTime.Now.Year.ToString() <a href="/">@lexiconHelper.GetTextValue("_service_here", 2)</a>. @lexiconHelper.GetTextValue("_all_rights_reserved", 2)</p>
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-6">
                                <div class="copyright-menu">
                                    <ul class="policy-menu">
                                        <li>
                                            <a href="/terms-of-use">@lexiconHelper.GetTextValue("_terms_of_use", 2)</a>
                                        </li>
                                        <li>
                                            <a href="/privacy-policy">@lexiconHelper.GetTextValue("_privacy_policy", 2)</a>
                                        </li>
                                        <li>
                                            <a href="/processing-of-personel-data">@lexiconHelper.GetTextValue("_processing_personel_data", 2)</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>

    <div class="modal account-modal fade" id="login_modal">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header p-0 border-0">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body login">
                    <div class="login-header login" style="padding-bottom: 0px;">
                        <h3>@lexiconHelper.GetTextValue("_login", 2) <span>@lexiconHelper.GetTextValue("_login_service_here", 2)</span></h3>
                    </div>
                    <form action="" id="loginForm">
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_email_join", 2)</label>
                            <input type="email" id="EmailOrPhone" name="EmailOrPhone" class="form-control" placeholder="@lexiconHelper.GetTextValue("_place_holder_email", 2)">
                        </div>
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_password_join", 2)</label>
                            <input type="password" id="Password" name="Password" class="form-control" placeholder="@lexiconHelper.GetTextValue("_placeholder_password", 2)">
                        </div>
                        <div class="text-right">
                        </div>
                        <button class="btn btn-primary btn-block btn-lg login-btn" type="submit">@lexiconHelper.GetTextValue("_login", 2)</button>
                        <div class="login-or" style="margin-bottom: 0px;padding-bottom:0px;">

                            <span class="or-line"></span>
                            <span class="span-or">or</span>
                        </div>

                        <div class="text-center dont-have">
                            @lexiconHelper.GetTextValue("_forgot_you_password_text", 2) <a href="/forgot-password">@lexiconHelper.GetTextValue("_forgot_you_password_link_text", 2)</a>
                        </div>
                        <div class="text-center dont-have">
                            @lexiconHelper.GetTextValue("_dont_have_an_account", 2) <a data-dismiss="modal" href="javascript:void(0);" data-toggle="modal" data-target="#user-register">@lexiconHelper.GetTextValue("_register", 2)</a>
                        </div>
                    </form>
                </div>
                <div class="modal-body provider" style="padding-bottom: 0px;">
                    <div class="login-header">
                        <h3>@lexiconHelper.GetTextValue("_join_as_a_provider", 2)</h3>
                    </div>

                    <form id="registerProviderForm">
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_email_join", 2)</label>
                            <input type="text" class="form-control" id="ProviderEmail" name="ProviderEmail" placeholder="@lexiconHelper.GetTextValue("_place_holder_email", 2)">
                        </div>
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_mobile_join", 2)</label>
                            <input type="text" class="form-control" id="ProviderMobile" name="ProviderMobile" placeholder="@lexiconHelper.GetTextValue("_placeholder_mobile", 2)">
                        </div>
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_create_password", 2)</label>
                            <input type="password" class="form-control" id="ProviderPassword" name="ProviderPassword" placeholder="@lexiconHelper.GetTextValue("_placeholder_password", 2)">
                        </div>
                        <div class="text-right">
                            <a class="forgot-link" data-dismiss="modal" href="javascript:void(0);" data-toggle="modal" data-target="#login_modal">@lexiconHelper.GetTextValue("_already_have_account", 2)</a>
                        </div>
                        <button class="btn btn-primary btn-block btn-lg login-btn" type="submit">@lexiconHelper.GetTextValue("_sign_up_provider", 2)</button>
                        <div class="login-or" style="margin-bottom: 0px;padding-bottom:0px;">
                            <span class="or-line"></span>
                            <span class="span-or">or</span>
                        </div>
                    </form>

                </div>
                <div class="modal-body user">
                    <div class="login-header">
                        <h3>@lexiconHelper.GetTextValue("_join_as_a_user", 2)</h3>
                    </div>

                    <form id="userRegisterForm">
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_email_join", 2)</label>
                            <input type="text" class="form-control" id="UserEmail" name="UserEmail" placeholder="@lexiconHelper.GetTextValue("_place_holder_email", 2)">
                        </div>
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_mobile_join", 2)</label>
                            <input type="text" class="form-control" id="UserMobile" name="UserMobile" placeholder="@lexiconHelper.GetTextValue("_placeholder_mobile", 2)">
                        </div>
                        <div class="form-group form-focus">
                            <label class="focus-label">@lexiconHelper.GetTextValue("_create_password", 2)</label>
                            <input type="password" class="form-control" id="UserPassword" name="UserPassword" placeholder="@lexiconHelper.GetTextValue("_placeholder_password", 2)">
                        </div>
                        <div class="text-right">
                            <a class="forgot-link" data-dismiss="modal" href="javascript:void(0);" data-toggle="modal" data-target="#login_modal">@lexiconHelper.GetTextValue("_already_have_account", 2)</a>
                        </div>
                        <button class="btn btn-primary btn-block btn-lg login-btn" type="submit">@lexiconHelper.GetTextValue("_sign_up_user", 2)</button>
                        <div class="login-or" style="margin-bottom: 0px;padding-bottom:0px;">
                            <span class="or-line"></span>
                            <span class="span-or">or</span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer " style="display: block !important;">
                    <div class="row form-row social-login">
                        <div class="col-md-6">
                            <div class="fb-login-button" data-size="medium" onlogin="checkLoginState();" data-button-type="login_with" data-layout="default" data-auto-logout-link="true" data-use-continue-as="false" data-width=""></div>
                        </div>
                        <div class="col-md-6">
                            <div id="g-signin2"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (currentUser != null)
    {
        <input type="hidden" id="isLogin" value="1" />
    }
    else
    {

        <input type="hidden" id="isLogin" value="0" />
    }

    <script src="~/js/jquery-3.5.0.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="~/js/moment.min.js"></script>
    <script src="~/js/bootstrap-datetimepicker.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/toastr/toastr.min.js"></script>
    <script src="~/js/script.js"></script>
    <script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
    @RenderSection("Scripts", required: false)


    <script>

        function onFailure(error) {
            console.log(error);
        }

        function renderButton() {
            gapi.signin2.render('g-signin2', {
                'scope': 'profile email',
                'width': 215,
                'height': 27,
                'longtitle': true,
                'theme': 'dark',
                'onsuccess': onSignIn,
                'onfailure': onFailure
            });
        }

        function openLoginModal(modal) {

            $('.modal-body').css("display", "none");
            $('.' + modal).css("display", "block");
            $('#login_modal').modal();
        }

        $(document).ready(function () {
	        $("#loginForm").validate({
		        rules: {
			        EmailOrPhone: {
				        required: true
			        },
			        Password: {
				        required: true
			        }
		        },
		        messages: {
			        EmailOrPhone: "@lexiconHelper.GetTextValue("_email_or_phone_required",99)",
			        Password: "@lexiconHelper.GetTextValue("_password_required",99)"
                        },
		        submitHandler: function () {

                    var loginUser = new Object();
                    loginUser.EmailOrPhone = $('#EmailOrPhone').val();
                    loginUser.Password = $('#Password').val();
                    loginUser.RequestModel = getRequestData();
                    loginUser.LoginType = 1;
			        $.ajax({
				        type: "POST",
				        url: "/security/login",
                        data: loginUser,
				        success: function (e) {
                            if (e.isSuccess == true) {
                                if (e.actionCode == "2" || e.actionCode == 2) {
                                    toastrSuccess("Successfuly login!");
                                    location.href = "my-bookings";
                                } else {
                                    toastrSuccess("Successfuly login!");
                                    location.href = "dashboard";
                                }
					        } else {
						        toastrDanger(e.message)
					        }
				        },
				        error: function (jqXHR, exception) {
					        var msg = '';
					        if (jqXHR.status === 0) {
						        msg = 'Not connect.\n Verify Network.';
					        } else if (jqXHR.status == 404) {
						        msg = 'Requested page not found. [404]';
					        } else if (jqXHR.status == 500) {
						        msg = 'Internal Server Error [500].';
					        } else if (exception === 'parsererror') {
						        msg = 'Requested JSON parse failed.';
					        } else if (exception === 'timeout') {
						        msg = 'Time out error.';
					        } else if (exception === 'abort') {
						        msg = 'Ajax request aborted.';
					        } else {
						        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }

                            toastrDanger(msg);
				        }
			        });
		        }

	        });
	        $("#userRegisterForm").validate({
		        rules: {
			        UserEmail: {
				        required: true
			        },
			        UserMobile: {
				        required: true
			        },
			        UserPassword: {
				        required: true
			        }
		        },
		        messages: {
			        UserEmail: "@lexiconHelper.GetTextValue("_email_required",99)",
			        UserMobile: "@lexiconHelper.GetTextValue("_mobile_required",99)",
			        UserPassword: "@lexiconHelper.GetTextValue("_password_required",99)"
                        },
		        submitHandler: function () {

			        var newUser = new Object();
			        newUser.Email = $('#UserEmail').val();
			        newUser.Phone = $('#UserMobile').val();
			        newUser.Password = $('#UserPassword').val();
			        newUser.PasswordAgain = newUser.Password;
                    newUser.RegisterType = 2;

                    newUser.RequestModel = getRequestData();

			        $.ajax({
				        type: "POST",
				        url: "/security/RegisterUser",
				        data: newUser,
				        success: function (e) {
					        if (e.isSuccess == true) {
						        location.href = "email-approve";
					        } else {
                                toastrDanger(e.message)
					        }
				        },
				        error: function (jqXHR, exception) {
					        var msg = '';
					        if (jqXHR.status === 0) {
						        msg = 'Not connect.\n Verify Network.';
					        } else if (jqXHR.status == 404) {
						        msg = 'Requested page not found. [404]';
					        } else if (jqXHR.status == 500) {
						        msg = 'Internal Server Error [500].';
					        } else if (exception === 'parsererror') {
						        msg = 'Requested JSON parse failed.';
					        } else if (exception === 'timeout') {
						        msg = 'Time out error.';
					        } else if (exception === 'abort') {
						        msg = 'Ajax request aborted.';
					        } else {
						        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }
                            toastrDanger(msg)
				        }
			        });
		        }

	        });
	        $("#registerProviderForm").validate({
		        rules: {
			        ProviderEmail: {
				        required: true
			        },
			        ProviderMobile: {
				        required: true
			        },
			        ProviderPassword: {
				        required: true
			        }
		        },
		        messages: {
			        ProviderEmail: "@lexiconHelper.GetTextValue("_email_required",99)",
			        ProviderMobile: "@lexiconHelper.GetTextValue("_mobile_required",99)",
			        ProviderPassword: "@lexiconHelper.GetTextValue("_password_required",99)"
                        },
		        submitHandler: function () {

			        var newUser = new Object();
			        newUser.Email = $('#ProviderEmail').val();
			        newUser.Phone = $('#ProviderMobile').val();
			        newUser.Password = $('#ProviderPassword').val();
			        newUser.PasswordAgain = newUser.Password;
                    newUser.RegisterType = 1;
                    newUser.RequestModel = getRequestData();
			        $.ajax({
				        type: "POST",
				        url: "/security/RegisterUser",
				        data: newUser,
				        success: function (e) {
					        if (e.isSuccess == true) {
						        location.href = "email-approve";
					        } else {
                                toastrDanger(e.message)
					        }
				        },
				        error: function (jqXHR, exception) {
					        var msg = '';
					        if (jqXHR.status === 0) {
						        msg = 'Not connect.\n Verify Network.';
					        } else if (jqXHR.status == 404) {
						        msg = 'Requested page not found. [404]';
					        } else if (jqXHR.status == 500) {
						        msg = 'Internal Server Error [500].';
					        } else if (exception === 'parsererror') {
						        msg = 'Requested JSON parse failed.';
					        } else if (exception === 'timeout') {
						        msg = 'Time out error.';
					        } else if (exception === 'abort') {
						        msg = 'Ajax request aborted.';
					        } else {
						        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                            }

                            toastrDanger(msg)
				        }
			        });
		        }

	        });
         });

        function clearSearch() {
            $('#categorySearch').val("");
        }

        function getRequestData() {

            var requestModel = new Object();
            requestModel.CategoryId = $('#categoryId').val();
            requestModel.Description = $('#RequestDescription').val();
            requestModel.CountryId = $('#RequestCountryId').val();
            requestModel.CityId = $('#RequestCityId').val();
            requestModel.Properties = new Array();

            $('.category_property input[type=text]').each(function () {
                var value = $(this).val();
                var id = $(this).attr('dataid');
                var attribute = new Object();
                attribute.Id = id;
                attribute.Value = value;
                requestModel.Properties.push(attribute);
            })

            return requestModel;
        }

        function createNewRequest() {
            var newRequest = new Object();
            newRequest = getRequestData();
            $.ajax({
                type: "POST",
                url: "/booking/CreateNewRequest",
                data: newRequest,
                success: function (e) {
                    if (e.isSuccess == true) {
                        toastrSuccess(e.message);
                        location.href = "my-bookings";
                    } else {
                        toastrDanger(e.message)
                    }
                }
            });
        }

        function clearNotifications() {
            var list = new Array();
             list = $("input[name='notifyListId[]']").map(function () { return $(this).val(); }).get();

            $.ajax({
                type: "POST",
                url: "/account/ReadNotifications",
                data: list,
                success: function (e) {
                    if (e.isSuccess == true) {
                        $('.notification-message').remove();
                        $('#notifyCount').remove();
                    } else {
                        toastrDanger(e.message)
                    }
                }
            });
        }

        function signOut() {
            $.ajax({
                type: "POST",
                url: "/api/logout",
                success: function (e) {

                    gapi.auth2.init()

                    var auth2 = gapi.auth2.getAuthInstance();
                    auth2.signOut().then(function () {
                        location.href = "main-page";
                    });


                    FB.logout(function (response) {
                    });

                }
            });

        }

        function onSignIn(googleUser) {
            var loginUser = new Object();
            var token =  googleUser.getAuthResponse().id_token;
            loginUser.GoogleToken = token;
            loginUser.RequestModel = getRequestData();
            if ($('#isLogin').val() == "1") {
                return;
            }
            $.ajax({
                type: "POST",
                url: "/security/LoginWithGoogle",
                data: loginUser,
                async:false,
                success: function (e) {
                    if (e.isSuccess == true) {
                        if (e.actionCode == "2" || e.actionCode == 2) {
                            toastrSuccess("Successfuly login!");
                            location.href = "my-bookings";
                        } else {
                            toastrSuccess("Successfuly login!");
                            location.href = "dashboard";
                        }

                    } else {
                        toastrDanger(e.message)
                    }
                },
                error: function (jqXHR, exception) {
                    var msg = '';
                    if (jqXHR.status === 0) {
                        msg = 'Not connect.\n Verify Network.';
                    } else if (jqXHR.status == 404) {
                        msg = 'Requested page not found. [404]';
                    } else if (jqXHR.status == 500) {
                        msg = 'Internal Server Error [500].';
                    } else if (exception === 'parsererror') {
                        msg = 'Requested JSON parse failed.';
                    } else if (exception === 'timeout') {
                        msg = 'Time out error.';
                    } else if (exception === 'abort') {
                        msg = 'Ajax request aborted.';
                    } else {
                        msg = 'Uncaught Error.\n' + jqXHR.responseText;
                    }

                    toastrDanger(msg);
                }
            });
        }

        function checkLoginState() {
            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);
            });
        }

        function statusChangeCallback(response) {

            if (response.status === 'connected') {
                var loginUser = new Object();
                var token = response.authResponse.accessToken;
                loginUser.FacebookToken = token;
                loginUser.RequestModel = getRequestData();
                if ($('#isLogin').val() == "1") {
                    return;
                }
                $.ajax({
                    type: "POST",
                    url: "/security/LoginWithFacebook",
                    data: loginUser,
                    success: function (e) {
                        if (e.isSuccess == true) {
                            if (e.actionCode == "2" || e.actionCode == 2) {
                                toastrSuccess("Successfuly login!");
                                location.href = "my-bookings";
                            } else {
                                toastrSuccess("Successfuly login!");
                                location.href = "dashboard";
                            }
                        } else {
                            toastrDanger(e.message)
                        }
                    },
                    error: function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }

                        toastrDanger(msg);
                    }
                });

            } else {
                document.getElementById('status').innerHTML = 'Please log ' +
                    'into this app.';
            }
        }

            window.fbAsyncInit = function () {
                FB.init({
                    appId: '318019909328460',
                    cookie: true,
                    xfbml: true,
                    version: 'v2.8'
                });

                FB.AppEvents.logPageView();

            };

            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) { return; }
                js = d.createElement(s); js.id = id;
                js.src = "https://connect.facebook.net/en_US/sdk.js";
                fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));
    </script>


</body>
</html>
