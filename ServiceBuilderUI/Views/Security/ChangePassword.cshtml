@inject Business.Service.Infrastructure.ILexiconService lexiconHelper;
@{
    ViewBag.Title = lexiconHelper.GetTextValue("_change_password_page_title", 18);
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="content">
    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="login-header">
                    <h3><span>@lexiconHelper.GetTextValue("_change_password_title", 18)</span></h3>
                </div>
                <form id="changePassswordForm" method="post">
                    <div class="row">
                        <div class="form-group col-xl-12">
                            <div class="media align-items-center mb-3">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <input type="hidden" id="OtpCode" name="OtpCode" value="@ViewBag.OtpCode" />
                        <div class="form-group col-xl-12">
                            <label class="mr-sm-2">@lexiconHelper.GetTextValue("_new_password", 99)</label>
                            <input class="form-control" type="password" id="Password" name="Password" />
                        </div>
                        <div class="form-group col-xl-12">
                            <label class="mr-sm-2">@lexiconHelper.GetTextValue("_new_password_again", 99)</label>
                            <input class="form-control" type="password" id="PasswordAgain" name="PasswordAgain" />
                        </div>
                        <div class="form-group col-xl-12">
                            <button name="form_submit" id="form_submit" class="btn btn-primary pl-5 pr-5" type="submit">@lexiconHelper.GetTextValue("_save", 99)</button>
                        </div>
                    </div>
                </form>

            </div>
        </div>
    </div>
</div>
@section Scripts{

    <script>


        $("#changePassswordForm").validate({
                rules: {
                    Password: {
                        required: true
                    },
                    PasswordAgain: {
                        required: true
                }
                },
               messages: {
                   Password: "@lexiconHelper.GetTextValue("_password_required",99)",
                   PasswordAgain: "@lexiconHelper.GetTextValue("_password_agaib_required",99)"
                },
               submitHandler: function () {


                   var form = $('#changePassswordForm')[0];
                   var data = new FormData(form);

                       $.ajax({
                           type: "POST",
                           url: "/security/ChangePasswordWithOtp",
                           data: $('#changePassswordForm').serialize(),
                            success: function (e) {
                                if (e.isSuccess == true) {
                                    toastrSuccess("@lexiconHelper.GetAlertSring("_change_password_succesfully_for_not_login",null)")
                                    setTimeout(function () {
                                        location.href = "login";
                                    }, 2000)

                                } else {
                                    toastrDanger(e.message);
                                }
                            },
                            error: function (jqXHR, exception) {
                                var msg = '';
                                if (jqXHR.status === 0) {
                                    msg = 'Not connect.\n Verify Network.';
                                } else if (jqXHR.status == 404) {
                                    msg = 'Requested page not found. [404]';
                                } else if (jqXHR.status == 500) {
                                    msg = 'Internal Server Error [500].';
                                } else if (exception === 'parsererror') {
                                    msg = 'Requested JSON parse failed.';
                                } else if (exception === 'timeout') {
                                    msg = 'Time out error.';
                                } else if (exception === 'abort') {
                                    msg = 'Ajax request aborted.';
                                } else {
                                    msg = 'Uncaught Error.\n' + jqXHR.responseText;
                                }
                                toastrDanger(e.msg);
                            }
                        });
            }

            });

    </script>

}




