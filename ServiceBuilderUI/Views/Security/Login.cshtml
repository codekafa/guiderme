@inject Business.Service.Infrastructure.ILexiconService lexiconHelper;
@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                <div class="login-header">
                    <h3>@lexiconHelper.GetTextValue("_login", 2) <span>@lexiconHelper.GetTextValue("_login_service_here", 2)</span></h3>
                </div>
                <form id="loginPageForm">
                    <div class="form-group form-focus">
                        <label class="focus-label">@lexiconHelper.GetTextValue("_email_join", 2)</label>
                        <input type="email" class="form-control" id="EmailOrPhoneLogin" name="EmailOrPhoneLogin" placeholder="@lexiconHelper.GetTextValue("_place_holder_email", 2)">
                    </div>
                    <div class="form-group form-focus">
                        <label class="focus-label">@lexiconHelper.GetTextValue("_password_join", 2)</label>
                        <input type="password" class="form-control" id="PasswordLogin" name="PasswordLogin" placeholder="@lexiconHelper.GetTextValue("_placeholder_password", 2)">
                    </div>
                    <div class="text-right">
                    </div>
                    <button class="btn btn-primary btn-block btn-lg login-btn" type="submit">@lexiconHelper.GetTextValue("_login", 2)</button>
                    <div class="login-or">
                        <span class="or-line"></span>
                        <span class="span-or">or</span>
                    </div>
                    <div class="text-center dont-have">
                        @lexiconHelper.GetTextValue("_forgot_you_password_text", 2) <a href="/forgot-password">@lexiconHelper.GetTextValue("_forgot_you_password_link_text", 2)</a>
                    </div>
                    <div class="text-center dont-have">
                        @lexiconHelper.GetTextValue("_dont_have_an_account", 2) <a href="#">@lexiconHelper.GetTextValue("_register", 2)</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>
           $(document).ready(function () {
               $("#loginPageForm").validate({
                rules: {
                       EmailOrPhoneLogin: {
                        required: true
                    },
                       PasswordLogin: {
                        required: true
                    }
                },
               messages: {
                   EmailOrPhoneLogin: "@lexiconHelper.GetTextValue("_email_or_phone_required",99)",
                   PasswordLogin: "@lexiconHelper.GetTextValue("_password_required",99)"
                },
                   submitHandler: function () {


                       var obj = new Object();
                       obj.EmailOrPhone = $('#EmailOrPhoneLogin').val();
                       obj.Password = $('#PasswordLogin').val();

                $.ajax({
                    type: "POST",
                    url: "/security/login",
                    data: obj,
                    content:"application/json",
					timeout: 600000,
                    success: function (e) {
                          if (e.isSuccess == true) {
                             location.href = "my-profile";
                          } else {
                              toastrDanger(e.message);
                        }
                    },
                    error: function (jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }

                        toastrDanger(msg);
                    }
                });
            }

            });
           });
    </script>
}
